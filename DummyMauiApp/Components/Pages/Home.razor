@page "/"
@inject DummySevice dummyService
@inject IDialogService DialogService
@inject NavigationManager NavManager
@using DummyMauiApp.Components.Controls
@using DummyMauiApp.Models
@using DummyMauiApp.Services
@using System.Diagnostics


<div>
    <div>
        <button class="btn btn-warning" @onclick="AddProduct">Add New Product</button>
        <p>Title: @DialogData.title</p>
    </div>


    @if(products is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        foreach(var product in products)
        {
            <div @onclick="() => GoToDetails(product)" class="card" style="margin-bottom: 20px;margin-top:20px;">
                <div class="card-header">
                    <h3>@product.title</h3>
                    <h5 class="card-title">@product.brand</h5>
                    @{
                        foreach (var image in product.images)
                        {
                            <img src="@image" alt="@product.title" class="img-fluid" width="150" />
                        }
                    }
                </div>
                <div class="card-body">
                    <p class="card-text">@product.description</p>
                </div>
            </div>
        }
    }
</div>

@code{
    List<Product> products = default!;
    private Product DialogData { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        products = await dummyService.GetProductsAsync();
    }

    private async Task AddProduct()
    {
        try
        {
            var data = new Product();

            var dialog = await DialogService.ShowDialogAsync<SimpleCustomizedDialog>(data, new DialogParameters()
            {
                Title = "Add New Product",
                PreventDismissOnOverlayClick = true,
                PreventScroll = true
            });

            var result = await dialog.Result;
            if (!result.Cancelled && result.Data is not null)
            {
                DialogData = (Product)result.Data;
                dummyService.AddProduct(data);
                products = await dummyService.GetProductsAsync();
            }
        }
        catch (Exception ex)
        {
            Debug.WriteLine(ex.Message);
        }
    }

    private void GoToDetails(Product product)
    {
        NavManager.NavigateTo($"/details/{product.id.ToString()}");
    }
}